def sendSlackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

sendSlackNotification('STARTED')

pipeline 
{

  agent any

  options
    {
        timestamps()
        buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '3', daysToKeepStr: '', numToKeepStr: '3')
    }


  tools 
  {
    maven "maven_3.8.3"
  }


  
    stages 
    {
      stage('CheckoutCode')
        {
            steps
            {
                git branch: 'development', credentialsId: '8db7f7cc-fd1c-4500-a1d4-d24ab0950b32', url: 'https://github.com/abhishek-525/maven-web-application.git'
            }
        }

        stage('MavenBuild')
        {
            steps
            {
                sh "mvn clean package"
            }
        }
        

        stage('DeploytoTomcat')
        {
            steps
            {
                sshagent(['9c8d8a5f-b615-4595-9f1f-27d0a8be6556']) 
                {
                    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@65.0.133.95:/opt/apache-tomcat-9.0.58/webapps/"
                }
            }
        }
    
  post 
    {
       // only triggered when blue or green sign
       success 
       {
          sendSlackNotification(currentBuild.result)
       }

       // triggered when red sign
       failure 
       {
          sendSlackNotification(currentBuild.result)
       }

       // trigger every-works
    }

    }

    
}

  
